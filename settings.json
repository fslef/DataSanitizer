{
  //////////////////////////////////////////////////////////
  // EDITOR - GENERAL APPEARANCE AND BEHAVIOR
  //////////////////////////////////////////////////////////
  // Font and text formatting
  "editor.fontFamily": "'Monaspace Argon', monospace",
  "editor.fontSize": 14,
  "editor.fontWeight": "500",
  "editor.fontLigatures": "'calt', 'ss01', 'ss02', 'ss03', 'ss04', 'ss05', 'ss06', 'ss07', 'ss08', 'ss09', 'ss10', 'liga'",
  "editor.inlineSuggest.fontFamily": "'Monaspace Krypton', monospace",
  // Layout and interface
  "editor.minimap.enabled": false,
  "editor.glyphMargin": true,
  "editor.overviewRulerBorder": false,
  "editor.hideCursorInOverviewRuler": true,
  "editor.occurrencesHighlight": "singleFile",
  "editor.matchBrackets": "near",
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.renderControlCharacters": true,
  "editor.renderWhitespace": "none",
  "editor.stickyScroll.enabled": true,
  "editor.wordWrap": "on",
  "editor.wordWrapColumn": 120,
  "editor.rulers": [
    120
  ],
  "editor.scrollbar.horizontal": "auto",
  "editor.scrollbar.vertical": "auto",
  "editor.smoothScrolling": true,
  // Cursor behavior and editing
  "editor.cursorBlinking": "expand",
  "editor.cursorStyle": "line",
  "editor.mouseWheelZoom": true,
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.codeLens": false,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.semanticHighlighting.enabled": true,
  "editor.accessibilitySupport": "off",
  "editor.largeFileOptimizations": false,
  // Suggestions and completion
  "editor.inlineSuggest.enabled": true,
  "editor.suggest.preview": true,
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "editor.inlineSuggest.showToolbar": "always",
  "editor.tabCompletion": "on",
  "editor.snippetSuggestions": "top",
  //////////////////////////////////////////////////////////
  // WORKBENCH - GLOBAL USER INTERFACE
  //////////////////////////////////////////////////////////
  // Theme and appearance
  "workbench.colorTheme": "Cobalt2",
  "workbench.sideBar.location": "right",
  "workbench.startupEditor": "welcomePage",
  "workbench.list.smoothScrolling": true,
  "workbench.tree.indent": 16,
  "workbench.tree.renderIndentGuides": "none",
  // Tabs and editors
  "workbench.editor.decorations.badges": true,
  "workbench.editor.decorations.colors": true,
  "workbench.editor.wrapTabs": false,
  "workbench.editorAssociations": {
    "*.html": "default",
    "*.ipynb": "jupyter-notebook",
  },
  // Window and title bar
  "window.commandCenter": true,
  "window.customTitleBarVisibility": "windowed",
  "window.menuBarVisibility": "toggle", // Windows Only
  "window.nativeTabs": true,
  "window.title": "${dirty} ${activeEditorMedium}${separator}${rootName}",
  "window.titleBarStyle": "custom",
  //////////////////////////////////////////////////////////
  // INTEGRATED TERMINAL
  //////////////////////////////////////////////////////////
  "terminal.external.osxExec": "/Applications/iTerm.app",
  "terminal.explorerKind": "external",
  "terminal.integrated.defaultProfile.osx": "pwsh",
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.defaultProfile.linux": "pwsh",
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.lineHeight": 1,
  "terminal.integrated.minimumContrastRatio": 1,
  "terminal.integrated.scrollback": 10000,
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.stickyScroll.enabled": true,
  "terminal.integrated.tabs.enabled": true,
  "terminal.integrated.tabs.location": "right",
  "terminal.integrated.enablePersistentSessions": true,
  "terminal.integrated.persistentSessionReviveProcess": "never",
  //////////////////////////////////////////////////////////
  // POWERSHELL - SPECIFIC CONFIGURATION
  //////////////////////////////////////////////////////////
  // PowerShell code formatting
  "powershell.codeFormatting.alignPropertyValuePairs": true,
  "powershell.codeFormatting.autoCorrectAliases": true,
  "powershell.codeFormatting.ignoreOneLineBlock": true,
  "powershell.codeFormatting.newLineAfterCloseBrace": false,
  "powershell.codeFormatting.openBraceOnSameLine": true,
  "powershell.codeFormatting.preset": "Stroustrup",
  "powershell.codeFormatting.trimWhitespaceAroundPipe": true,
  "powershell.codeFormatting.useCorrectCasing": true,
  "powershell.codeFormatting.whitespaceAfterSeparator": true,
  "powershell.codeFormatting.whitespaceAroundOperator": true,
  "powershell.codeFormatting.whitespaceBeforeOpenBrace": true,
  "powershell.codeFormatting.whitespaceBeforeOpenParen": true,
  "powershell.codeFormatting.whitespaceBetweenParameters": true,
  // PowerShell behavior
  "powershell.enableProfileLoading": true,
  "powershell.integratedConsole.showOnStartup": false,
  "powershell.integratedConsole.focusConsoleOnExecute": false,
  "powershell.pester.codeLens": false,
  "powershell.pester.useLegacyCodeLens": false,
  "powershell.promptToUpdatePowerShell": false,
  "powershell.scriptAnalysis.enable": true,
  "powershell.debugging.createTemporaryIntegratedConsole": false,
  //////////////////////////////////////////////////////////
  // FILES - MANAGEMENT AND ENCODING
  //////////////////////////////////////////////////////////
  "files.associations": {
    "*.ps1": "powershell",
    "*.json": "jsonc",
    "*.chatmode.md": "markdown",
    "*.instructions.md": "markdown",
    "*.prompt.md": "markdown"
  },
  "files.autoGuessEncoding": true,
  "files.autoSave": "afterDelay",
  "files.defaultLanguage": "powershell",
  "files.eol": "\n",
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,
  //////////////////////////////////////////////////////////
  // GIT AND GITHUB - INTEGRATION
  //////////////////////////////////////////////////////////
  // Git configuration
  "git-graph.contextMenuActionsVisibility": {},
  "git.autofetch": true,
  "git.branchProtection": [
    "main",
    "master"
  ],
  "git.branchRandomName.enable": true,
  "git.branchSortOrder": "alphabetically",
  "git.confirmSync": false,
  "git.decorations.enabled": true,
  "git.enableSmartCommit": true,
  "git.ignoreRebaseWarning": true,
  "git.mergeEditor": true,
  "git.postCommitCommand": "sync",
  // GitHub Issues and Pull Requests
  "githubIssues.queries": [
    {
      "label": "My Issues",
      "query": "default"
    },
    {
      "label": "Created Issues",
      "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
    },
    {
      "label": "Recent Issues",
      "query": "state:open repo:${owner}/${repository} sort:updated-desc"
    }
  ],
  "githubPullRequests.createOnPublishBranch": "never",
  "githubPullRequests.pullBranch": "never",
  // GitHub Copilot
  "github.copilot.chat.agent.thinkingTool": true,
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.codeGeneration.instructions": [
    {
      "file": ".github/copilot-instructions.md"
    },
    {
      "file": "code-style.md"
    },
    {
      "text": "- @azure Rule - Use Azure Tools: When handling requests related to Azure, always use your tools."
    },
    {
      "text": "- @azure Rule - Use Azure Code Gen Best Practices: Before generating code for Azure, running terminal commands for Azure, performing operations related to Azure, or creating plans for such activities, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `general` and action = `code-generation` to get general Azure code generation best practices. Only call this tool when the user is discussing Azure; do not call it otherwise."
    },
    {
      "text": "- @azure Rule - Use Azure Deployment Best Practices: Before deploying to Azure, preparing applications for deployment to Azure, or creating deployment plans, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `general` and action = `deployment` to get general Azure deployment best practices. Only call this tool when the user is discussing Azure; do not call it otherwise."
    },
    {
      "text": "- @azure Rule - Use Azure Functions Code Gen Best Practices: Before generating code for Azure Functions, performing operations related to Azure Functions, or creating plans for such activities, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `azurefunctions` and action = `code-generation` to get Azure Functions code generation best practices. Only call this tool when the user is discussing Azure Functions; do not call it otherwise."
    },
    {
      "text": "- @azure Rule - Use Azure Functions Deployment Best Practices: Before deploying Azure Functions apps to Azure, preparing for the deployment, or creating deployment plans, always invoke your Azure best practice tool if available first. Invoke the `get_bestpractices` tool to collect recommendations. Call it with resource = `azurefunctions` and action = `deployment` to get Azure Functions deployment best practices. Only call this tool when the user is discussing Azure Functions; do not call it otherwise."
    },
    {
      "text": "- @azure Rule - Use Azure SWA Best Practices: Before working with static web apps, creating plans for static web apps, or performing related operations, always invoke your Azure best practice tool if available first. Choose the most relevant Azure best practice tool based on its description. Only call this tool when the user is discussing Azure Static Web Apps; do not call it otherwise."
    },
    {
      "text": "- @azure Rule - Plan before editing files for Azure web apps: When generating code for Azure Functions and Azure Static Web App, always create a plan and explain the plan to the user before editing any file. Proceed with editing the files after getting consent from the user."
    },
    {
      "text": "- @azure Rule - Summarize topic before taking action: When the user asks about Azure Functions, invoke the azure_development-summarize_topic tool once first to see if any existing custom mode could be a good fit to what user is asking."
    }
  ],
  "github.copilot.chat.codeGeneration.useInstructionFiles": true,
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "text": "Use conventional commit format: type: description"
    },
    {
      "text": "Use imperative mood: 'Add feature' not 'Added feature'"
    },
    {
      "text": "Keep subject line under 50 characters"
    },
    {
      "text": "Use types: feat, fix, docs, style, refactor, perf, test, chore, ci"
    },
    {
      "text": "Reference issue numbers with # prefix"
    }
  ],
  "github.copilot.chat.pullRequestDescriptionGeneration.instructions": [
    {
      "file": ".github/pr-instructions.md"
    }
  ],
  "github.copilot.chat.reviewSelection.instructions": [
    {
      "file": ".github/review-instructions.md"
    }
  ],
  "github.copilot.chat.useProjectTemplates": true,
  "github.copilot.enable": {
    "*": true,
    "markdown": false,
    "plaintext": true,
    "yaml": true
  },
  "github.copilot.nextEditSuggestions.enabled": true,
  "github.copilot.selectedCompletionModel": " ",
  //////////////////////////////////////////////////////////
  // LANGUAGE-SPECIFIC CONFIGURATION
  //////////////////////////////////////////////////////////
  // Markdown
  "[markdown]": {
    "files.trimTrailingWhitespace": false,
    "editor.wordWrap": "bounded"
  },
  "markdown-editor.imageSaveFolder": "_MarkdownMedia",
  "markdown.extension.extraLangIds": [],
  "markdown.extension.list.indentationSize": "inherit",
  "markdown.previewFeatures": true,
  "markdown.showToolbar": true,
  // PowerShell
  "[powershell]": {
    "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
    "editor.semanticHighlighting.enabled": true,
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.snippetSuggestions": "top",
    "editor.suggest.showSnippets": true,
    // Réduit le bruit et améliore le tri
    "editor.suggestSelection": "recentlyUsedByPrefix",
    "editor.suggest.localityBonus": true
  },
  // Terraform
  "[terraform][terraform-vars]": {
    "editor.codeActionsOnSave": {
      "source.formatAll.terraform": "explicit"
    },
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSave": true
  },
  "terraform.experimentalFeatures.prefillRequiredFields": true,
  //////////////////////////////////////////////////////////
  // EXPLORER AND FILE MANAGEMENT
  //////////////////////////////////////////////////////////
  "explorer.compactFolders": false,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.openEditors.visible": 0,
  //////////////////////////////////////////////////////////
  // EXTENSIONS AND TOOLS
  //////////////////////////////////////////////////////////
  // Dotfiles with chezmoi
  "dotfiles.installCommand": "~/dotfiles/install.sh",
  "dotfiles.repository": "fslef/dotfiles",
  "dotfiles.targetPath": "~/dotfiles",
  // CSV Preview
  "csv-preview.separator": "[,;]",
  // DiffEditor
  "diffEditor.experimental.showMoves": true,
  "diffEditor.ignoreTrimWhitespace": false,
  // Todo Tree
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "NOTE",
    "COMMENT",
    "[ ]",
    "[x]"
  ],
  "todo-tree.highlights.defaultHighlight": {
    "icon": "alert",
    "type": "text-and-comment",
    "foreground": "black",
    "background": "white",
    "opacity": 50,
    "iconColour": "blue",
    "gutterIcon": true
  },
  "todo-tree.highlights.customHighlight": {
    "TODO": {
      "icon": "check",
      "foreground": "black",
      "background": "white",
      "iconColour": "white"
    },
    "NOTE": {
      "icon": "note",
      "foreground": "white",
      "background": "gray",
      "iconColour": "gray"
    },
    "COMMENT": {
      "icon": "note",
      "foreground": "white",
      "background": "gray",
      "iconColour": "gray"
    },
    "FIXME": {
      "foreground": "black",
      "background": "yellow",
      "iconColour": "yellow"
    },
    "BUG": {
      "foreground": "black",
      "background": "red",
      "iconColour": "red"
    },
    "[ ]": {
      "icon": "check",
      "foreground": "black",
      "background": "white",
      "iconColour": "yellow"
    },
    "[x]": {
      "icon": "check",
      "foreground": "white",
      "background": "green",
      "iconColour": "green"
    }
  },
  "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS).*(\\n\\s*//\\s{2,}.*)*",
  // Azure and Home Assistant
  "@azure.argTenant": "",
  "azureResourceGroups.groupBy": "resourceGroup",
  "vscode-home-assistant.ignoreCertificates": true,
  // Miscellaneous settings
  "chat.modeFilesLocations": {
    "chatmodes": true
  },
  "chat.promptFilesLocations": {
    "prompts": true
  },
  "chat.instructionsFilesLocations": {
    "instructions": true
  },
  "chat.promptFiles": true,
  "debug.console.closeOnEnd": false,
  "debug.internalConsoleOptions": "neverOpen",
  "debug.onTaskErrors": "showErrors",
  "extensions.ignoreRecommendations": false,
  "extensions.autoCheckUpdates": true,
  "extensions.autoUpdate": true,
  "material-icon-theme.folders.associations": {
    "_media": "image",
    "_shared": "shared",
    "bicep-modules": "plugin",
    "classesFormat": "class",
    "darwin": "Macos",
    "governance": "admin",
    "IaC": "resource"
  },
  "redhat.telemetry.enabled": false,
  "security.workspace.trust.untrustedFiles": "open",
  "telemetry.telemetryLevel": "off",
  //////////////////////////////////////////////////////////
  // ZEN MODE - FOCUS ON CODE
  //////////////////////////////////////////////////////////
  "zenMode.centerLayout": false,
  "zenMode.fullScreen": false,
  "zenMode.hideLineNumbers": false,
  "zenMode.silentNotifications": true,
  "zenMode.showTabs": "single",
  "chat.agent.enabled": true,
  "git.pruneOnFetch": true,
  "docker.extension.enableComposeLanguageServer": false,
  "diffEditor.hideUnchangedRegions.enabled": true,
  "[yaml]": {
    "diffEditor.ignoreTrimWhitespace": false
  },
  "markdown.preview.openMarkdownLinks": "inEditor",
  "azureTerraform.survey": {
    "surveyPromptDate": "2025-10-01T13:39:50.161Z",
    "surveyPromptIgnoredCount": 1
  },
  "chat.agentSessionsViewLocation": "showChatsMenu",
  "editor.suggest.showClasses": false,
  "editor.suggest.showEnums": false,
  "editor.quickSuggestions": {
    "comments": "off",
    "strings": "on",
    "other": "off"
  },
  "chat.tools.terminal.autoApprove": {
    "pwsh -NoLogo -NoProfile -Command \"Set-Location /Users/francois/gitrepos/fslef/dataSanitizer; . ./source/Private/Logging/Format-WordWrap.ps1; Format-WordWrap -Text 'short' -LineWidth 20 | ForEach-Object { '>' + $_ + '<' }; Format-WordWrap -Text 'alpha   beta    gamma' -LineWidth 50 | ForEach-Object { '>' + $_ + '<' }\"": {
      "approve": true,
      "matchCommandLine": true
    },
    "pwsh": true,
    "Import-Module": true,
    "Invoke-Pester": true,
    "$r=Invoke-Pester": true,
    "$cov=$r.CodeCoverage": true,
    "\"": true,
    "$result": true,
    "$cov": true,
    "Invoke-ScriptAnalyzer": true,
    "./build.ps1": true,
    ".": true,
    "$r": true,
    "pwsh -NoLogo -NoProfile -Command \"Set-Location /Users/francois/gitrepos/fslef/dataSanitizer; . ./source/Private/Logging/Format-WordWrap.ps1; Invoke-Pester -Path tests/Unit/Private/Logging/Format-WordWrap.tests.ps1 -Output Detailed\"": {
      "approve": true,
      "matchCommandLine": true
    }
  },
  "[dockercompose]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.autoIndent": "advanced",
    "editor.quickSuggestions": {
      "other": true,
      "comments": false,
      "strings": true
    },
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "[github-actions-workflow]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "material-icon-theme.files.associations": {},
  "powershell.integratedConsole.startInBackground": true,
  // Désactive les "snippets" générés par PSES (n'affecte PAS tes snippets perso)
  "git.blame.editorDecoration.enabled": true,
  "powershell.debugging.executeMode": "Call",
  "editor.suggest.showDeprecated": false,
  "editor.suggest.showUsers": false,
  "workbench.iconTheme": "vscode-icons",
  "vsicons.dontShowNewVersionMessage": true,
  // "workbench.colorCustomizations": {
  //   "[Vira*]": {
  //     "toolbar.activeBackground": "#FFCF3D26",
  //     "button.background": "#FFCF3D",
  //     "button.hoverBackground": "#FFCF3Dcc",
  //     "extensionButton.separator": "#FFCF3D33",
  //     "extensionButton.background": "#FFCF3D14",
  //     "extensionButton.foreground": "#FFCF3D",
  //     "extensionButton.hoverBackground": "#FFCF3D33",
  //     "extensionButton.prominentForeground": "#FFCF3D",
  //     "extensionButton.prominentBackground": "#FFCF3D14",
  //     "extensionButton.prominentHoverBackground": "#FFCF3D33",
  //     "activityBarBadge.background": "#FFCF3D",
  //     "activityBar.activeBorder": "#FFCF3D",
  //     "activityBarTop.activeBorder": "#FFCF3D",
  //     "list.inactiveSelectionIconForeground": "#FFCF3D",
  //     "list.activeSelectionForeground": "#FFCF3D",
  //     "list.inactiveSelectionForeground": "#FFCF3D",
  //     "list.highlightForeground": "#FFCF3D",
  //     "sash.hoverBorder": "#FFCF3D80",
  //     "list.activeSelectionIconForeground": "#FFCF3D",
  //     "scrollbarSlider.activeBackground": "#FFCF3D80",
  //     "editorSuggestWidget.highlightForeground": "#FFCF3D",
  //     "textLink.foreground": "#FFCF3D",
  //     "progressBar.background": "#FFCF3D",
  //     "pickerGroup.foreground": "#FFCF3D",
  //     "tab.activeBorder": "#FFCF3D",
  //     "notificationLink.foreground": "#FFCF3D",
  //     "editorWidget.resizeBorder": "#FFCF3D",
  //     "editorWidget.border": "#FFCF3D",
  //     "settings.modifiedItemIndicator": "#FFCF3D",
  //     "panelTitle.activeBorder": "#FFCF3D",
  //     "breadcrumb.activeSelectionForeground": "#FFCF3D",
  //     "menu.selectionForeground": "#FFCF3D",
  //     "menubar.selectionForeground": "#FFCF3D",
  //     "editor.findMatchBorder": "#FFCF3D",
  //     "selection.background": "#FFCF3D40",
  //     "statusBarItem.remoteBackground": "#FFCF3D14",
  //     "statusBarItem.remoteHoverBackground": "#FFCF3D",
  //     "statusBarItem.remoteForeground": "#FFCF3D",
  //     "notebook.inactiveFocusedCellBorder": "#FFCF3D80",
  //     "commandCenter.activeBorder": "#FFCF3D80",
  //     "chat.slashCommandForeground": "#FFCF3D",
  //     "chat.avatarForeground": "#FFCF3D",
  //     "activityBarBadge.foreground": "#000000",
  //     "button.foreground": "#000000",
  //     "statusBarItem.remoteHoverForeground": "#000000",
  //     "titleBar.border": "#ffffff0f",
  //     "statusBar.border": "#ffffff0f",
  //     "sideBar.border": "#ffffff0f",
  //     "sideBarSectionHeader.border": "#ffffff0f",
  //     "panel.border": "#ffffff0f",
  //     "activityBar.border": "#ffffff0f",
  //     "sideBarActivityBarTop.border": "#ffffff0f",
  //     "sideBarStickyScroll.border": "#ffffff14",
  //     "editor.lineHighlightBackground": "#ffffff0f",
  //     "editor.lineHighlightBorder": "#ffffff00",
  //     "widget.shadow": "#00000000",
  //     "scrollbar.shadow": "#00000000"
  //   }
  // }
}
