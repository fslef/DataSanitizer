---
####################################################
#          ModuleBuilder Configuration             #
####################################################

BuiltModuleSubdirectory: module
VersionedOutputDirectory: true
CopyPaths:
  - en-US
#  - DSCResources
  # - Modules
Encoding: UTF8

####################################################
#      ModuleBuilder Submodules Configuration      #
####################################################

NestedModule:
#  HelperSubmodule: # This is the first submodule to build into the output
#    Path: ./*/Modules/HelperSubmodule/HelperSubmodule.psd1
#    #  is trimmed (remove metadata & Prerelease tag) and OutputDirectory expanded (the only one)
#    OutputDirectory: ///Modules/HelperSubmodule
#    VersionedOutputDirectory: false
#    AddToManifest: false
#    SemVer:
#    # suffix:
#    # prefix:

####################################################
#       PESTER  Configuration                      #
####################################################

Pester:
  Configuration:
    Run:
      # Default is to use the tests folder in the project folder or source folder (if present)
      # can use it to prioritize: tests/QA, tests/Unit, tests/Integration
      Path:
        - tests/QA
        - tests/Unit
        #- tests/Unit/Public/Add-Sample.tests.ps1
        #- tests/Unit/Public/New-SampleModule.tests.ps1
        #- tests/Integration
    Output:
      Verbosity: Detailed
      StackTraceVerbosity: Full
      CIFormat: Auto
    CodeCoverage:
      CoveragePercentTarget: 5 # Set to 0 to bypass
      # Set to specific filename to override the default filename.
      #OutputPath: JaCoCo_coverage.xml
      OutputEncoding: ascii
      UseBreakpoints: false
    TestResult:
      OutputFormat: NUnitXML
      OutputEncoding: ascii
  # Will look at every *.ps1 & *.psm1 under ModulePath, excepts when $_.FullName -match (Join-Path $ProjectPath $ExcludeFromCodeCoverageItem)
  ExcludeFromCodeCoverage:
    - Templates
    - Modules/DscResource.Common
    - Assets
    # This is deprecated Pester 4 HQRM test, the HQRM test for Pester 5 has been
    # moved to module DscResource.Test.
    - tasks/DscResource.Test.build.ps1

####################################################
#           Code Coverage Configuration            #
####################################################

CodeCoverage:
  # Filename of the file that will be outputted by the task Merge_CodeCoverage_Files.
  CodeCoverageMergedOutputFile: JaCoCo_coverage.xml
  # File pattern used to search for files under the ./output/testResults folder
  # by task Merge_CodeCoverage_Files.
  CodeCoverageFilePattern: Codecov*.xml

####################################################
#             HQRM Test Configuration              #
####################################################

DscTest:
  Pester:
    Configuration:
      Filter:
        ExcludeTag:
          - "Common Tests - New Error-Level Script Analyzer Rules"
          - "Common Tests - Validate Localization"
          - "Common Tests - Validate Example Files To Be Published"
          - "Common Tests - Validate Example Files"
      Output:
        Verbosity: Detailed
        CIFormat: Auto
      TestResult:
        OutputFormat: NUnitXML
        OutputEncoding: ascii
        OutputPath: ./output/testResults/NUnitXml_HQRM_Tests.xml
  Script:
    ExcludeSourceFile:
      - output
      - Modules/DscResource.Common
    ExcludeModuleFile:
      - Templates
      - Modules/DscResource.Common
    MainGitBranch: main

####################################################
#       Sampler Pipeline Configuration             #
####################################################
# Defining 'Workflows' (suite of InvokeBuild tasks) to be run using their alias
BuildWorkflow:
  '.': # "." is the default Invoke-Build workflow. It is called when no -Tasks is specified to the build.ps1
    - build
    - test

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - Create_changelog_release_output


  pack:
    - build
    - package_module_nupkg

  docs:
    # The meta task Generate_Wiki_Content is not used so that Linux and macOS is supported
    # - Generate_Conceptual_Help # Used for DSC resources
    - Create_Wiki_Output_Folder
    - Copy_Source_Wiki_Folder
    # - Generate_Markdown_For_DSC_Resources # Used for DSC resources
    - Generate_Markdown_For_Public_Commands
    - Generate_External_Help_File_For_Public_Commands
    - Clean_Markdown_Of_Public_Commands
    - Generate_Wiki_Sidebar
    - Clean_Markdown_Metadata
    - Package_Wiki_Content



  # Defining test task to be run when invoking `./build.ps1 -Tasks test`
  test:
    - Set_PSModulePath
    - Pester_Tests_Stop_On_Fail
    - Convert_Pester_Coverage
    - Pester_if_Code_Coverage_Under_Threshold

  merge:
    - Merge_CodeCoverage_Files

  publish:
    - Publish_Release_To_GitHub # Runs first, if token is expired it will fail early
    - publish_module_to_gallery

ModuleBuildTasks:
  Sampler:
    - '*.build.Sampler.ib.tasks'
  Sampler.GitHubTasks:
    - '*.ib.tasks'
  DscResource.Test:
    - 'Task.*'
  DscResource.DocGenerator:
    - 'Task.*'

# Invoke-Build Header to be used to 'decorate' the terminal output of the tasks.
TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""

GitHubConfig:
  GitHubFilesToAdd:
    - 'CHANGELOG.md'
  ReleaseAssets:
    - output/WikiContent.zip
  GitHubConfigUserName: fslef
  GitHubConfigUserEmail: 23463958+fslef@users.noreply.github.com
  UpdateChangelogOnPrerelease: false

####################################################
#      DscResource.DocGenerator Configuration      #
####################################################
DscResource.DocGenerator:
  # Generate_Conceptual_Help:
  #   MarkdownCodeRegularExpression:
  #     - '\`(.+?)\`' # Match inline code-block
  #     - '\\(\\)' # Match escaped backslash
  #     - '\[[^\[]+\]\((.+?)\)' # Match markdown URL
  #     - '_(.+?)_' # Match Italic (underscore)
  #     - '\*\*(.+?)\*\*' # Match bold
  #     - '\*(.+?)\*' # Match Italic (asterisk)
  Publish_GitHub_Wiki_Content:
    Debug: false
  Generate_Wiki_Content:
    # MofResourceMetadata:
    #   Type: MofResource
    #   Category: Resources
    # ClassResourceMetadata:
    #   Type: ClassResource
    #   Category: Resources
    # CompositeResourceMetadata:
    #   Type: CompositeResource
    #   Category: Resources
  Generate_Wiki_Sidebar:
     Debug: false
     AlwaysOverwrite: true
